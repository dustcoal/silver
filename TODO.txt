* logging to file. should be able to pickup logpath and logname from command line args, otherwise determine one or both automatically
* split code in client / common / server. force client to connect to an existing server, no integrated server bullshit
* feature parity with whatever recent minecraft but focus on 1.7.10
* find ways to optimize saves, maybe sqlite is not the best thing, idk
* lod
* shader support, maybe add a translation layer to classic optifine shaders
* possibility of self-hosted standalone account management service, (as well as possibility to host one directly on a server, might be more hassle than just standalone)
* standard and extended resource pack support
* find elegant way to enable pure C mod modules or maybe say fuck it and consolidate some kind of gt:nh behemoth in C
* Ambient occlusion;And tinted sides on blocks;And fake lights on hand held items
* find some nice solution for gui. I feel like it's either full spartan Ã  la minecraft or something html/css shit (https://mikke89.github.io/RmlUiDoc, https://github.com/litehtml/litehtml)
* tick any visited sleeping chunks with entities inside periodically. make the tick speed faster there so they catch up. simplify whatever possible (e.g. mob behavior/movement)
* some smart way of implementing cubic chunks. periodical chunk wakes should propagate lighting and maybe a fake ceiling?? there should be some heuristics to determine when the player falls to load more chunks below at a time
* prints should probably be protected by a mutex (logs are now, it should be sufficient)
* list of potentially useful pull requests to log.c:
    * https://github.com/rxi/log.c/pull/27/files
    * https://github.com/rxi/log.c/pull/34/files
    * https://github.com/rxi/log.c/pull/25/files
    * https://github.com/rxi/log.c/pull/24/files
    * https://github.com/rxi/log.c/pull/21/files

* list of future libs to include:
    * file dialog: https://github.com/rxi/sfd
    * microui: https://github.com/rxi/microui (web demo: https://floooh.github.io/sokol-html5/sgl-microui-sapp.html)
    * http server: https://github.com/rxi/sandbird # tbh nah, the auth server will be its own thing (in python lol), and dedicated server auth will be over protobuf
    * uuid 4: https://github.com/rxi/uuid4
    * vector: https://github.com/rxi/vec  or  https://github.com/eteran/c-vector (actively maintained)
    * hashmap: https://github.com/rxi/map or https://github.com/Mashpoe/c-hashmap
    * pango or harfbuzz for glyphs
    * maybe gio (gnome i/o) for files
    * protobuf for networking: https://github.com/protobuf-c/protobuf-c

* lib maybeboard
    * subprocesses: https://github.com/sheredom/subprocess.h


* opt
    * tick different things at different rates? Heard might be aids to sync but tbh idk
    * discrete subsystems (a subsystem is notified only if an event concerns it)



* misc of misc
    * blood moon event from random things (?) is related to blood magic